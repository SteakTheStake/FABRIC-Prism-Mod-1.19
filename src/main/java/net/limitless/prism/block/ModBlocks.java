package net.limitless.prism.block;

import net.fabricmc.fabric.api.object.builder.v1.block.FabricBlockSettings;
import net.limitless.prism.Prism;
import net.limitless.prism.block.custom.*;
import net.minecraft.block.Block;
import net.minecraft.block.Material;
import net.minecraft.item.BlockItem;
import net.minecraft.item.Item;
import net.minecraft.util.Identifier;
import net.minecraft.util.registry.Registry;

public class ModBlocks {
    public static final Block DIRTY_COBBLESTONE = new DirtyCobblestone(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block VILLAGE_BLOCK = new VillageBlock(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block CASTLE_BLOCK = new CastleBlock(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block CASTLE_BLOCK_TOP = new CastleBlockTop(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block CASTLE_ARCH = new CastleArch(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block CASTLE_BLOCK_WINDOW = new CastleBlockWindow(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block DESERT_FLOOR = new DesertFloor(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block DESERT_FLOOR_TILES = new DesertFloorTiles(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block DESERT_BRICK_TILES = new DesertBrickTiles(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block DESERT_BRICK_WALL = new DesertBrickWall(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block RED_DESERT_FLOOR_TILES = new RedDesertFloorTiles(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block MARBLE_TILES = new MarbleTiles(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block SHOP_COVER_RIGHT = new ShopCoverRight(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(false));
    public static final Block SHOP_COVER_MIDDLE = new ShopCoverMiddle(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(false));
    public static final Block SHOP_COVER_LEFT = new ShopCoverLeft(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(false));
    public static final Block BASKET_OF_POTATO = new BasketOfPotato(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block BASKET_OF_MANGO = new BasketOfMango(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block BASKET_OF_APPLE = new BasketOfApple(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block BASKET_OF_RADISH = new BasketOfRadish(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block BIG_ARCH = new BigArch(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block WOODEN_WALL_PIECE = new WoodenWallPiece(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block DESERT_BRICK = new DesertBrick(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block DESERT_BRICK_TOP = new DesertBrickTop(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block DESERT_BRICK_WINDOW = new DesertBrickWindow(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block DESERT_BRICK_ARCH = new DesertBrickArch(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block THATCHED_ROOF = new ThatchedRoof(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block DINGING_ROOM_CHAIR = new DiningRoomChair(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block CLOVER_PATCH = new CloverPatch(FabricBlockSettings.of(Material.LEAVES).nonOpaque().collidable(false));
    public static final Block BARREL = new Barrel(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block BARREL_OPEN = new BarrelOpen(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block STAIRS = new Stairs(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block HOUSE_WALL = new HouseWall(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block HOUSE_TUDOR_WALL = new HouseTudorWall(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block HOUSE_TUDOR_WALL_EXTRA = new HouseTudorWallExtra(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block WOODEN_WALL = new WoodenWall(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block WOODEN_FLOOR = new WoodenFloor(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block FENCE = new Fence(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block BREAKFAST_SAVORY = new BreakfastSavory(FabricBlockSettings.of(Material.GLASS).nonOpaque().collidable(false));
    public static final Block BREAKFAST_SWEET = new BreakfastSweet(FabricBlockSettings.of(Material.GLASS).nonOpaque().collidable(false));
    public static final Block GRASS = new Grass(FabricBlockSettings.of(Material.LEAVES).nonOpaque().collidable(true));

    public static final Block STONE = new Stone(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block COARSE_DIRT = new CoarseDirt(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block SAND = new Sand(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block MUD = new Mud(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block ANDESITE = new Andesite(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block DIORITE = new Diorite(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block GRANITE = new Granite(FabricBlockSettings.of(Material.STONE).nonOpaque().collidable(true));
    public static final Block PALM_LOG_BIG = new PalmLogBig(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block PALM_LOG_THIN = new PalmLogThin(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(true));
    public static final Block PALM_LEAVES = new PalmLeaves(FabricBlockSettings.of(Material.LEAVES).nonOpaque().collidable(true));
    public static final Block PALM_LEAVES_TOP = new PalmLeavesTop(FabricBlockSettings.of(Material.LEAVES).nonOpaque().collidable(true));

    public static final Block TROPICAL_PLANT = new TropicalPlant(FabricBlockSettings.of(Material.LEAVES).nonOpaque().collidable(false));
    public static final Block PALM_SAPLING = new PalmSapling(FabricBlockSettings.of(Material.LEAVES).nonOpaque().collidable(false));
    public static final Block BIG_TORCH = new BigTorch(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(false));
    public static final Block WALL_BIG_TORCH = new WallBigTorch(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(false));
    public static final Block ROPE_BLOCK = new RopeBlock(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(false));
    public static final Block CLOTHES_1 = new ClothesOne(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(false));
    public static final Block CLOTHES_2 = new ClothesTwo(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(false));
    public static final Block CLOTHES_3 = new ClothesThree(FabricBlockSettings.of(Material.WOOD).nonOpaque().collidable(false));

    public static void registerModBlocks() {
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"village_block"), VILLAGE_BLOCK);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"village_block"), new BlockItem(VILLAGE_BLOCK, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"dirty_cobblestone"), DIRTY_COBBLESTONE);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"dirty_cobblestone"), new BlockItem(DIRTY_COBBLESTONE, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"castle_block"), CASTLE_BLOCK);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"castle_block"), new BlockItem(CASTLE_BLOCK, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"castle_block_top"), CASTLE_BLOCK_TOP);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"castle_block_top"), new BlockItem(CASTLE_BLOCK_TOP, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"castle_arch"), CASTLE_ARCH);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"castle_arch"), new BlockItem(CASTLE_ARCH, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"castle_block_window"), CASTLE_BLOCK_WINDOW);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"castle_block_window"), new BlockItem(CASTLE_BLOCK_WINDOW, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"big_arch"), BIG_ARCH);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"big_arch"), new BlockItem(BIG_ARCH, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"wooden_wall_piece"), WOODEN_WALL_PIECE);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"wooden_wall_piece"), new BlockItem(WOODEN_WALL_PIECE, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"desert_floor"), DESERT_FLOOR);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"desert_floor"), new BlockItem(DESERT_FLOOR, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"desert_floor_tiles"), DESERT_FLOOR_TILES);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"desert_floor_tiles"), new BlockItem(DESERT_FLOOR_TILES, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"red_desert_floor_tiles"), RED_DESERT_FLOOR_TILES);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"red_desert_floor_tiles"), new BlockItem(RED_DESERT_FLOOR_TILES, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"marble_tiles"), MARBLE_TILES);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"marble_tiles"), new BlockItem(MARBLE_TILES, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"shop_cover_right"), SHOP_COVER_RIGHT);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"shop_cover_right"), new BlockItem(SHOP_COVER_RIGHT, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"shop_cover_middle"), SHOP_COVER_MIDDLE);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"shop_cover_middle"), new BlockItem(SHOP_COVER_MIDDLE, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"shop_cover_left"), SHOP_COVER_LEFT);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"shop_cover_left"), new BlockItem(SHOP_COVER_LEFT, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"basket_of_potato"), BASKET_OF_POTATO);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"basket_of_potato"), new BlockItem(BASKET_OF_POTATO, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"basket_of_mango"), BASKET_OF_MANGO);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"basket_of_mango"), new BlockItem(BASKET_OF_MANGO, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"basket_of_apple"), BASKET_OF_APPLE);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"basket_of_apple"), new BlockItem(BASKET_OF_APPLE, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"basket_of_radish"), BASKET_OF_RADISH);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"basket_of_radish"), new BlockItem(BASKET_OF_RADISH, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"desert_brick"), DESERT_BRICK);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"desert_brick"), new BlockItem(DESERT_BRICK, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"desert_brick_wall"), DESERT_BRICK_WALL);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"desert_brick_wall"), new BlockItem(DESERT_BRICK_WALL, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"desert_brick_tiles"), DESERT_BRICK_TILES);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"desert_brick_tiles"), new BlockItem(DESERT_BRICK_TILES, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"desert_brick_top"), DESERT_BRICK_TOP);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"desert_brick_top"), new BlockItem(DESERT_BRICK_TOP, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"desert_brick_window"), DESERT_BRICK_WINDOW);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"desert_brick_window"), new BlockItem(DESERT_BRICK_WINDOW, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"desert_brick_arch"), DESERT_BRICK_ARCH);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"desert_brick_arch"), new BlockItem(DESERT_BRICK_ARCH, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"thatched_roof"), THATCHED_ROOF);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"thatched_roof"), new BlockItem(THATCHED_ROOF, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"dining_room_chair"), DINGING_ROOM_CHAIR);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"dining_room_chair"), new BlockItem(DINGING_ROOM_CHAIR, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"clover_patch"), CLOVER_PATCH);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"clover_patch"), new BlockItem(CLOVER_PATCH, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"barrel"), BARREL);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"barrel"), new BlockItem(BARREL, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"barrel_open"), BARREL_OPEN);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"barrel_open"), new BlockItem(BARREL_OPEN, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"stairs"), STAIRS);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"stairs"), new BlockItem(STAIRS, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"house_wall"), HOUSE_WALL);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"house_wall"), new BlockItem(HOUSE_WALL, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"house_tudor_wall"), HOUSE_TUDOR_WALL);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"house_tudor_wall"), new BlockItem(HOUSE_TUDOR_WALL, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"house_tudor_wall_extra"), HOUSE_TUDOR_WALL_EXTRA);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"house_tudor_wall_extra"), new BlockItem(HOUSE_TUDOR_WALL_EXTRA, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"wooden_wall"), WOODEN_WALL);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"wooden_wall"), new BlockItem(WOODEN_WALL, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"wooden_floor"), WOODEN_FLOOR);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"wooden_floor"), new BlockItem(WOODEN_FLOOR, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"fence"), FENCE);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"fence"), new BlockItem(FENCE, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"breakfast_savory"), BREAKFAST_SAVORY);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"breakfast_savory"), new BlockItem(BREAKFAST_SAVORY, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"breakfast_sweet"), BREAKFAST_SWEET);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"breakfast_sweet"), new BlockItem(BREAKFAST_SWEET, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"grass"), GRASS);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"grass"), new BlockItem(GRASS, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"sand"), SAND);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"sand"), new BlockItem(SAND, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"stone"), STONE);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"stone"), new BlockItem(STONE, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"coarse_dirt"), COARSE_DIRT);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"coarse_dirt"), new BlockItem(COARSE_DIRT, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"mud"), MUD);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"mud"), new BlockItem(MUD, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"andesite"), ANDESITE);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"andesite"), new BlockItem(ANDESITE, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"diorite"), DIORITE);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"diorite"), new BlockItem(DIORITE, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"granite"), GRANITE);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"granite"), new BlockItem(GRANITE, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"palm_log_big"), PALM_LOG_BIG);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"palm_log_big"), new BlockItem(PALM_LOG_BIG, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"palm_log_thin"), PALM_LOG_THIN);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"palm_log_thin"), new BlockItem(PALM_LOG_THIN, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"palm_leaves"), PALM_LEAVES);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"palm_leaves"), new BlockItem(PALM_LEAVES, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"palm_leaves_top"), PALM_LEAVES_TOP);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"palm_leaves_top"), new BlockItem(PALM_LEAVES_TOP, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"palm_sapling"), PALM_SAPLING);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"palm_sapling"), new BlockItem(PALM_SAPLING, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"big_torch"), BIG_TORCH);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"big_torch"), new BlockItem(BIG_TORCH, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"wall_big_torch"), WALL_BIG_TORCH);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"wall_big_torch"), new BlockItem(WALL_BIG_TORCH, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"rope"), ROPE_BLOCK);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"rope"), new BlockItem(ROPE_BLOCK, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"clothes_1"), CLOTHES_1);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"clothes_1"), new BlockItem(CLOTHES_1, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"clothes_2"), CLOTHES_2);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"clothes_2"), new BlockItem(CLOTHES_2, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"clothes_3"), CLOTHES_3);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"clothes_3"), new BlockItem(CLOTHES_3, new Item.Settings()));
        Registry.register(Registry.BLOCK, new Identifier(Prism.MOD_ID,"tropical_plant"), TROPICAL_PLANT);
        Registry.register(Registry.ITEM, new Identifier(Prism.MOD_ID,"tropical_plant"), new BlockItem(TROPICAL_PLANT, new Item.Settings()));
    }

}
